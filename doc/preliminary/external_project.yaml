openapi: 3.1.0
info:
  title: Projects Service API
  description: Projects Service API
  version: 1.0.0
servers:
  - url: 'https://orckester.dytech.space/api'
paths:

  get:
    summary: Get list projects
    parameters:
      in: header
      name: X-user-id
      schema: { type string, format: uuid }
    responses:
      '200':
        description: OK
        contet:
          application/json:
            schema:
              type: array
              items: {
                  id: { type: string, format: uuid }
                  ownerId: { type: string, format: uuid }
                  name: { type: string }
                  aiAgents: { type: array }
                  status: { type: string, enum }
              }

  get:
    summary: Get project
    parameters:
      in: header
      name: X-progect-id
      schema: { type string, format: uuid }
    responses:
      '200':
        description: OK
        contet:
          application/json:
            schema:
              type: Object
              items: {
                id: { type: string, format: uuid }
                  ownerId: { type: string, format: uuid }
                  name: { type: string }
                  aiAgents: { type: array }
                  status: { type: string, enum }
              }
  post:
    summary: Create new project
    in: header
    name: X-User-id
    schema: { type string, format: uuid }
   requestBody:
     content:
       application/json:
         schema:
           ownerId: { type: string, format: uuid }
           name: { type: string }
           aiAgents: { type: array }

  delete:
    summary: Delete project
    parameters:
      - in: path
        name:  X-Progect-id
        schema: { type: string, format: uuid }
      responses:
        '204': { description: Deleted }

        components:
          schemas:
            Project:
              type: object
              properties:
                id: { type: string, format: uuid }
                ownerId: { type: string, format: uuid }
                name: { type: string }
                aiAgents: { type: array }
                status: { type: string, enum }
                createdAt: { type: date}
                updatedAt: { type: date }
                deletedAt: { type: date }
            ProjectCreate:
              type: object
              required: [ name ]
              properties:
                name: { type: string }
                aiAgents: { type: string }