Надо создать описание REST API в формате OpenApi (файл yml).

Сущность "Узел" (node):
{
    long id, // ID узла
    long id_ai, // Связанная AI-сущность
    string name, // Короткое отображаемое имя узла
    string description, // Описание узла (всплывающее описание и т.п.)
    string text_in, // Входной текст
    string text_out // Выходной текст
}

Сущность "Линия" (соединительная линия: line or edge):
{
    long id, // ID линии
    long id_node_begin, // ID начального узла
    long id_node_end, // ID конечного узла
    string description // Описание линии
}

Сущность "Диаграмма" (набор узлов и линий):
{
    long id, // ID диаграммы
    string name, // Короткое отображаемое имя диаграммы
    string description, // Описание диаграммы (для чего применяется и т.п.)
    массив узлов,
    массив линий
}

Сущность "Ошибка":
{
    int code, // Код ошибки 
    String message, // Короткое сообщение
    String details // Детали ошибки
}

Сущность "Элемент списка диаграмм":
{
    long id, // ID диаграммы
    string name // Короткое отображаемое имя диаграммы
}

Создание новой диаграммы: POST /templates/create
Возвращает HttpStatus.CREATED и сущность 
{
    id long // ID диаграммы
}
В случае ошибки - сущность "Ошибка" и статус не HttpStatus.CREATED.

Сохранение диаграммы: POST /templates/{id диаграммы}/save
Возвращает HttpStatus.OK и сущность 
{
    long id, // ID диаграммы
    string name // Короткое отображаемое имя диаграммы
}
В случае ошибки - сущность "Ошибка" и статус не HttpStatus.OK.

Удаление диаграммы: DELETE /templates/{id диаграммы}/delete
Возвращает HttpStatus.NO_CONTENT и сущность 
{
    long id, // ID диаграммы
    string name // Короткое отображаемое имя диаграммы
}
В случае ошибки - сущность "Ошибка" и статус не HttpStatus.NO_CONTENT.

Получение списка диаграмм: GET /templates
Возвращает HttpStatus.OK и сущность 
{
    массив "Элемент списка диаграмм"
}
В случае ошибки - сущность "Ошибка" и статус не HttpStatus.OK.
